on:
  pull_request:
  schedule:
    - cron: '0 5 * * *' # daily at 5am

name: CI

env:
  RUST_BACKTRACE: 1

jobs:
  platform-specific:
    name: clippy, test --release

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-12]

    timeout-minutes: 90
    env:
      FORCE_COLOR: 1

    steps:
      - uses: actions/checkout@v2
        with:
          clean: "true"

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: download Roc nightly build (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: ./ci/download_latest_nightly.sh linux_x86_64
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: download Roc nightly build (macOS)
        if: startsWith(matrix.os, 'macos')
        run: ./ci/download_latest_nightly.sh macos_12_x86_64
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --lib

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: make libapp.so (macOS)
        if: startsWith(matrix.os, 'macos')
        run: roc gen-stub-lib ./examples/hello/rbt.roc

      - name: make libapp.so (linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: roc build --lib ./examples/hello/rbt.roc

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  platform-generic:
    name: cargo fmt, roc format, roc check, typos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          clean: "true"

      - name: download Roc nightly build (Linux)
        run: ./ci/download_latest_nightly.sh linux_x86_64

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: roc check
        run: git ls-files | grep -E '.roc$' | xargs -n 1 roc check

      - name: typos
        uses: crate-ci/typos@v1.0.4
        with:
          config: _typos.toml

      - name: roc format
        run: git ls-files | grep -E '.roc$' | xargs roc format --check
